% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/system3.R
\name{system3}
\alias{system3}
\title{Run a system command quietly unless there's errors}
\usage{
system3(command, args = character(), verbose = TRUE, ret = FALSE)
}
\arguments{
\item{command}{The command name, passed to \code{\link[=system2]{system2()}}.}

\item{args}{Optional arguments, passed to \code{\link[=system2]{system2()}}.}

\item{verbose}{If \code{TRUE} (default), prints the command line before it is executed, otherwise it is ommitted.}

\item{ret}{If \code{TRUE}, returns STDOUT/STDERR output as a string vector, with return value as the "status" attribute, just as \code{\link[=system2]{system2()}} returns it when its options are set to \code{stdout = TRUE} and \code{stderr = TRUE}.
If \code{FALSE} (default), nothing is returned, and execution is quiet if successful and stops with full STDOUT/STDERR output if unsuccessful.}
}
\value{
Nothing if \code{ret = FALSE} (default), otherwise the STDOUT/STDERR output with return value as the "status" attribute (see \code{ret} option above).
}
\description{
A wrapper around \code{\link[=system2]{system2()}} with some modified behaviors for error cases.
When the command is successful, all STDOUT/STDERR output from the binary is omitted (assumes it is useless most of the time).
When the command fails, by default the R command stops, showing the full STDOUT/STDERR output as the error message.
However, when \code{ret = TRUE} the full STDOUT/STDERR output is returned as a string, and the return value is returned as the "status" attribute (just as \code{\link[=system2]{system2()}} returns it, see that for more info).
The \code{ret = TRUE} case tries to avoid producing errors and warnings, allowing for error recovery, though in some cases this is unavoidable (for example, when "command" doesn't exist).
}
\examples{
# an example where nothing really happens and nothing is returned
system3( 'ls', '-lh' )

# an example that returns the output of `ls`
# (detailed table of files in current dir)
out <- system3( 'ls', '-lh', ret = TRUE )

# error handling is the cool part!

# passing a command that doesn't exist produces an error no matter what
try( system3( 'flmsdmfr' ) )
try( out <- system3( 'flmsdmfr', ret = TRUE ) )

# passing a good command with bad arguments, or other behaviors that lead the 
# command to start executing but fail and return a non-zero exit status makes
# `system3` fail by default, and output STDOUT/STDERR as the error message...
try( system3( 'ls', 'file-that-doesnt-exist' ) )

# ... but not if `ret = TRUE`, allowing for easier error recovery by examining
# its output.
out <- system3( 'ls', 'file-that-doesnt-exist', ret = TRUE )
# error status is this attribute:
attr( out, "status" )

}
\seealso{
\code{\link[=system2]{system2()}}
}
